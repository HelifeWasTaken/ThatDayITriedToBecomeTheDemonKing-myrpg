name: Launch

on:
    push:
        branches:
        - dev
        - main
        - master
    pull_request:
jobs:
    launch:
        runs-on: ubuntu-20.04
        container: docker://helife/epilight
        steps:
        - uses: actions/checkout@v2
        - name: Install Xvfb
          run: dnf install xorg-x11-server-Xvfb psmisc -y
        - name: Run default scene
          shell: bash
          run: |
            make 2>&1 | tee build_output
            echo "default scene: game not started">>ci_state
            Xvfb :1 -screen 0 1024x768x24 &
            export DISPLAY="1:0"
            sh -c "sleep 5 && killall my_rpg" &
            bash -c './my_rpg; CODE=$?; if [[ $CODE == 143 ]]; then echo "default scene: success: ran for 20 seconds without crash">>ci_state; exit 0; else echo "failure: exited with code $CODE">ci_state; exit $CODE; fi'
        - name: Run menu scene
          shell: bash
          run: |
            sed -i 's/set_pending_scene.game.*/set_pending_scene(game, MENU_SCENE);/g' src/game.c
            make 2>&1 | tee -a build_output
            echo "menu scene: game not started">>ci_state
            Xvfb :1 -screen 0 1024x768x24 &
            export DISPLAY="1:0"
            sh -c "sleep 5 && killall my_rpg" &
            bash -c './my_rpg; CODE=$?; if [[ $CODE == 143 ]]; then echo "menu scene: success: ran for 20 seconds without crash">>ci_state; exit 0; else echo "failure: exited with code $CODE">ci_state; exit $CODE; fi'
        - name: Run play scene
          shell: bash
          run: |
            sed -i 's/set_pending_scene.game.*/set_pending_scene(game, PLAY_SCENE);/g' src/game.c
            make 2>&1 | tee -a build_output
            echo "play scene: game not started">>ci_state
            Xvfb :1 -screen 0 1024x768x24 &
            export DISPLAY="1:0"
            sh -c "sleep 10 && killall my_rpg" &
            bash -c './my_rpg; CODE=$?; if [[ $CODE == 143 ]]; then echo "play scene: success: ran for 20 seconds without crash">>ci_state; exit 0; else echo "failure: exited with code $CODE">ci_state; exit $CODE; fi'
        - name: Send notification
          shell: bash
          if: ${{ github.event_name == 'push' && always() }}
          run: |
            checkout=$(git log -1 --pretty=format:"*Checkout:%d: %h %s*")
            state=$(cat ci_state)
            echo '{"content": "**'$GITHUB_REPOSITORY'**\n'$checkout'\nAttempting to launch game: ```\n'$state'\n```"}' > notification_data
            curl --data "$(cat notification_data)" --header "Content-Type: application/json" https://discord.com/api/webhooks/823450813899866143/BBDxIXReQq8zMX6DTtCWL9bTrXZC_zamaAoLZ4zH7pETRi5T9loJSWozYeK1NfaCZFtE